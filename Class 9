/*Organização de Computadores
Cássio Pinheiro
ULA Simples com Classe

1) Necessita implementação de Flags, como:
    1.1) Zero;
    1.2) Negativo
    1.3) Overflow(tentativa frustrada)*/

#include <stdio.h>

#define ADD 0
#define SUB 1
#define MUL 2
#define DIV 3

typedef struct {
    float resultado;
    int zero;
    int negativo;
    int overflow;
}ResultadoULA;

ResultadoULA execULA(char op, float op_a, float op_b) {
    ResultadoULA resultado;

    if (op == ADD) {
        resultado.resultado = op_a + op_b;
    } else if (op == SUB) {
        resultado.resultado = op_a - op_b;
    } else if (op == MUL) {
        resultado.resultado = op_a * op_b;
    } else if (op == DIV) {
        if (op_b == 0) {
            resultado.resultado = -1;
            resultado.overflow = 0;
        } else {
            resultado.resultado = op_a / op_b;
        }
    } else {
        resultado.resultado = -2;
    }
    resultado.zero = (resultado.resultado == 0) ? 1 : 0;
    resultado.negativo = (resultado.resultado < 0) ? 1 : 0;
    resultado.overflow = 0;

    return resultado;
}
int main(void) {
    ResultadoULA resultado;

    resultado = execULA(ADD, 5, -5);
    printf("Resultado: %.2f\n", resultado.resultado);
    printf("Zero: %d\n", resultado.zero);
    printf("Negativo: %d\n", resultado.negativo);
    printf("Overflow: %d\n\n", resultado.overflow);

    resultado = execULA(SUB, 5, 10);
    printf("Resultado: %.2f\n", resultado.resultado);
    printf("Zero: %d\n", resultado.zero);
    printf("Negativo: %d\n", resultado.negativo);
    printf("Overflow: %d\n\n", resultado.overflow);

    resultado = execULA(MUL, 25777.5, 2);
    printf("Resultado: %.2f\n", resultado.resultado);
    printf("Zero: %d\n", resultado.zero);
    printf("Negativo: %d\n", resultado.negativo);
    printf("Overflow: %d\n\n", resultado.overflow);

    resultado = execULA(DIV, 10, 0);
    printf("Resultado: %.2f\n", resultado.resultado);
    printf("Zero: %d\n", resultado.zero);
    printf("Negativo: %d\n", resultado.negativo);
    printf("Overflow: %d\n\n", resultado.overflow);

    return 0;
}
